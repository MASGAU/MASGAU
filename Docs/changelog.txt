=1.0 - Back to Alpha=
* All e-mails sent via MailSystem.NET (http://mailsystem.codeplex.com/)
* Changed XML format to conform with the GameSave.Info 2.0 spec, but here are dome format change highlights:
* Added environment_variable attribute to location_shortcut tag so that shortcuts in other locations can be specified
* Added new append attribute to ps_code tag to allow dividing up collections that share the same ps code
* Added new type attribute to ps_code tag to allow sorting playstation saves into types
* Added new location_scummvm tag to detect games based on ScummVM's ini file
* Added new android platform for saves that are detected on attached android devices
* Added new linkable tag to denote what folders are and aren't linkable
* Added new EV: CommonApplicationData

* Changed backup behavior so that files from different roots go in different archives. These seperate archives are identified by a hash of the original file's root path.
* Changed game data files to be in Common app data folder, so that you don't have to be admin to update/add games
* Added the ability to add a manual custom game
* Added the ability to symlink games (replaces old sync system)
* Removed task scheduler. The monitor is being beefed up to take it's place.
* Changed analyzer to work in tandem with custom games
* Single user and all user mode now share the same per-user config files
* Re-wrote interface. Again.

=0.9.2 - Portable Evolution=
* Fixed a bug when restoring to a game in an Alt. Install Path
* Changed Steam EV to have priority over program files EV
* Change to remove old location handler when resetting the handler

=0.9.1 - Independent Evolution=
* Added client code for the new automatically generating update server

=0.9 - Beta in mind=
* Change Analyzer to disable entire interface while e-mailing
* Changed analyzer to e-mail masgausubmissions@gmail.com instead of my personal address
* Added startup check to monitor to exit the program if a detected monitor is already running.
* Settings are automatically shared between running programs
* Restore process overhauled, including ability to select specific files to restore
* Added the ability to mass-restore easily
* Entire interface re-written (But it still looks pretty much the same! Progress!)
* Monitor settings overhauled, right click menu much smaller and tidier
* Added the ability to do an automatic mass-restore
* Added ability to edit reports before sending/saving them
* Added a flashshare environemtn variable for flash games
* Changed the restore process to create a temp file (which is ignored by DropBox), and works on that file, then copies the temp file over the original file (or converts the old one to a revision copy if that setting is enabled).
* Added new modified_after attribute to the save, ignore and identifier tags.
* Stuff
* Little things
* Big things
* SUPPORT FOR DAIKATANA! BOOYAH!

=v.0.8 - Beta in spirit=
* Added a contribution counter to the about tab. So cool.
* Added the ability to sort the games list both ascending and descending
* Fixed detection of Playstation saves on memory sticks formatted as "FAT" (Fix contributed by duncans_pumpkin)
* Moved the populating of the main interface elements to the shown event handler to prevent potential synchronization issues, which unfortuantely means it takes longer for the interface to enable
* Changed game_data XML element to just game
* Changed target framework to .NET 4.0
* Added more advanced XML validation for better error feedback
* Added an XSD for the game data XML format
* Shifted a while loop so that a duplicate game name does not necessarily prevent further game detection
* Added the ability to detect saves that are actually just in the root of a relative path
* Added %ALTSAVEPATHS% for saves that could be anywhere
* Added %STEAMSOURCEMODS% to point to Steam/steamapps/SourceMods
* Changed Analyzer to convert paths to lowercase to ensure matches while scanning the registry and the s0tart menu
* Adjusted relative path detection so that all path names come right from the file system
* Changed detected roots for a game to be stored in a Dictionary instead of an ArrayList to help prevent identical duplicates
* Changed naming convention so mods have a ?then the name of the game they are modding
* Stopped MASGAU Monitor from being bi-polar (flashing Danger Will Robinson / Safety Will Robinson)
* Added a precaution to MASGAU Monitor in case duplicate save paths are passed to it
* Changed Path Handler so that both VirtualStore and the real Program Files will always be checked regardless of UAC status, which should help accomodate old games that may or may not be running as Admin
* Changed the backup detection portion of startup to use the progress bar, as this step can take a while if you have enough backups
* Fixed appending of root path to file name when making a custom archive
* Changed custom archives to automatically have a timestamp appended to the name
* Changed monitor's tooltip to always have the right plural 
* Added the option to Monitor (which will be on by default) to perform a full backup on startup. This is to prevent some files from going undetected just because they were made while Monitor wasn't running.
* Addeed a check so Monitor will prompt for a backup path if one is not set
* Rearranged the tabs in order of most frequently used (IMHO)
* Moved game data XML files to a subfolder so they won't interfere with other xml files
* Added the ability to update game definitions via auto-check or by pushing a button on the settings tab
* Fixed a couple cross-thread calls
* Fixed a bug when restoring a game to an %INSTALLLOCATION% path. Which pretty much means all of them. Sorry guys, my bad.
* Fixed a mistake that caused the "Use This" button to actually cancel a restore. I need to have my head examined.
* Changed 7z.exe finder to first check in the install folder - this is prepping for a portable version
* Changed config path thinger to first check in the install folder - see above
* Switched installer to Inno Setup
* Changed registry manager to be able to see 64-bit context even in 32-bit, thus removing the need for 64-bit builds
* Fixed being able to see the 64-bit Program Files folder
* A couple other things that I forgot about because my computer crashed and corrupted the changelog
* Added errors for when a registry key root isn't recognized, and when a relative root isn't recognized, and when there's a space in a game name
* Added all settings to Monitor, so you don't have to fire up the main program if you don't want to
* Added locks to settings manager to prevent two threads from modifying the config file simultaneously
* Changed XML definition to use location instead of root
* Added environment_variable attribute to location tags, not more of that %% stuff
* Changed registry attribute to registry_root and registry_key
* Some massive internal overhauling to accomodate the above 3 changes and generally make the whole detection process a lot cleaner
* Finally got everything in the same namespace
* Created portable version
* Added support for an ignore tag
* Added button to e-mail reports straight from the analyzer
* Changed the detected games list to be tile view
* Fixed a bug that allowed the same file to be detected twice
* Added a comment box to the analyzer
* Added support for games that use Steam's userdata folder
* Fixed a crash when trying to restore a game with a name MASGAU doesn't know
* Added an alert when a new version of MASGAU is available
* A bunch of other things that I didn't keep track of

=v.0.7.1 - Micro-release the second=
* Fixed a bug that caused loaded registry hives to not unload, causing the associated users to be unable to load their profiles

=v.0.7 - Alpha Seven=
* Rebuilt interface so that the main window can be resized
* Rebuilt custom archive window so it can be resized
* Fixed a bug that crashed MASGAU when trying to restore an archive to steam when no Steam users had been detected
* Added a status bar to replace the splash
* Added file size to reports in analyzer
* Added a UAC indicator to reports in analyzer
* Made analyzer's report window resizable
* Reworked most of the internal cross-thread stuff. More stable, and allows me to do more with the interface.
* Updated Saved Games folder detection to accomodate custom locations (just for you cammkelly!)
* Changed all links so they open with the default web browser
* Changed Task to supress dialogs when running in non-interactive mode
* Thanks to a suggestion from VincentV137, MASGAU now has a save profile to back up a custom.xml file in MASGAU's install folder
* Added a new system.xml for holding definitions of system data
* Added profile for backing up a user's Games for Windows account information (for Arkham)
* Disabled the purge command for non-windows games
* Little theming tweaks to the interface
* Changed the detected games list to make use of check boxes
* Added support for Windows 7 tasbar progress bars, courtesy of Windows 7 Progress Bars from http://wyday.com/windows-7-progress-bar/
* Blatantly flaunted Microsoft progress bar color guidelines 
* Updated monitor so that the detected games list also functions as a checklist to disable end enable games
* Fixed a bug that caused mods to lose user information
* Inserted a delay into the backup method to allow 7-zip time to finish working (solves can't write to file error)
* Changed monitor redetection to clear out all of it's arrayslists properly
* Changed shortcut scanning to deal with targetless shortcuts
* Fixed a bug that caused start menu shortcuts to produce incorrect paths
* Little things here and there that I don't remember

=v.0.6 - Sixth Alpha=
* Fixed a bug where XP would be detected as Vista
* Fixed a related bug that caused LocalAppData and AppData to malfunction under XP
* Eliminated the guesswork from user folders, all user folders are now extracted from each user's hive file for utmost accuracy
* Changed alt paths so on startup if an alt path isn't actually present it isn't eliminated, just ignored
* Changed restore process so if a folder is being created in a public location, it will have it's permissions set so everyone can write there
* Added support for new relative path %SAVEDGAMES%, which points to the user's Saved Games folder under Vista and 7
* Fixed a bug preventing games installed onto the root of a disc from detecting
* Fixed 2 bugs that prevented monitor from dealing with files that only appeared momentarily
* Added a small XML file to all backups so that their associated game and creator can be identified regardless of file name (this means that you can rename the archives to whatever you want as long as it still has the .gb7 extension)
* Fixed a bug that prevented monitor from saving files that were at the moment still in use
* Added failsafe to monitor in case 7-zip is not installed
* Fixed a bug that causes monitor to not shut down all of it's threads
* Added ability to specify file name during custom backup creation
* Fixed a bug that prevented restoring most games
* Changed the path handler to use SubStr instead of Replace
* Added ability to restore many saves without requiring game detection
* Changed Settings tab so the Start monitor on Login check box will be disabled if the monitor isn't installed
* Changed detected game list to sort by Name first rather than Platform
* Fixed code for games that depend on other games so that it actually works\
* Added a sub-menu to monitor that shows all the detected games. Handy!
* Fixed a bug that caused analyzer to crash when accessing folders and files with malformed names

=v.0.5-1 Quick fix=
* Fixed a bug where Playstation game data objects would have null root lists

=v.0.5 - Fifth Alpha=
* Changed 7-zip detection to use a registry key
* Fixed a bug where ps1 saves would only use the ps3 export root
* Fixed a bug where PSP and PS1 saves tried to back up the entire save folder. Eek.
* Fixed a bug that kept the previous one in check by not letting any playstation saves back up.
* Fixed a bug that caused playstation saves to appear multiple times in the Custom backup dialog, could potentially have affected Windows saves as well
* Fixed a bug that caused the restore dialog to launch twice
* Added a new component for generating save game reports
* Switched to using NSIS instead of MSI for the installer
* Added ability to specify the Windows version a root is for
* Installer now automatically detects if .NET and 7-zip are installed, and will offer to automatically install them if not found

=v.0.4 - Fourth Alpha=
* Changed Playstation detection to only look on removable drives
* Changed drive reads to only read drives marked as ready
* Changed path detection to only look on fixed and removable drives
* Changed the XML format to use one large XMl file for each platform
* Added a name="" attribute to the game_data tag
* Concatenated all the XML files
* Added platform identifier to restore items
* Added ability to sort backup list
* Changed so that Frontend doesn't need to launch the backup to do anything.
* Added picker for when more than one restore location candidate is found
* Cleaned up the restore process. Thing was a mess. Probably still is.
* Fixed a potential bug where a user named "Global" might not be able to restore it's saves
* Added monitor for automatic backups
* Interface polishing
* Added tooltips where I felt they would be helpful
* Fixed a bug where saves with a filename and path weren't getting parsed properly
* Fixed a bug where it would parse all the games when restoring instead of just the game in question
* Added ability to disable games
* Added ability to create a custom archive with only selected files
* Lots of bug fixes and such
* Added ability to create new backups after a period of time

=v.0.3 - Third Alpha=
* Added new button for multiple backing up
* Added a second progress bar to backend that only appears when backing up
* Added new class: SecurityHandler
* Added detection for if MASGAU has elevated permissions. If it doesn't, then only backs up the current user.
* Added backup path check to check for read and write  parmissions
* Added permission check to archiver to check if the archive can be written to
* Added restore check for archive read persmiisions
* Added restore check to check destination path for write priveleges
* Added ability to detect Playstation 1,2,3 and Portable saves by ID
* Added date check to backup process so that by default only files that have been modified more recently than the archive was created will be archived
* Added settings tab check box to override backup date check
* Changed TaskHandler to use a username and password for the task
* Changed so detracts happen before appends
* Changed backup buttons so that if no backup folder is specified it will just ask for one
* Changed detected list back to ListView for multiple selection
* Changed backend to accept multiple backup commands
* Changed backend so if only one argument is passed, the end will be checked for .gb7 to establish whether a restore is being done
* Changed MASGAU's internal path handling to be a little more organized
* Overhauled how mods are handled. They are now treated like regular games, and can have a root that is based on another game
* Replaced all (most) path combinations with Path.Combine (Thanks EER!)
* Prepped GameData's GetSaves to pass the appropriate data to the updated ArchiveManager
* Changed so that files are archived one at a time, rather than by folder when possible
* Replaced %PROGRAMFILES% and %DRIVE% with %INSTALLLOCATION%
* Changed so that you can use wildcards in save paths
* Changed Backend cancel button so no processes or threads need to be killed
* Changed folder browser to open to convenient locations
* Changed so the system user selector dialog dialog doesn't appear in Single-User mode
* Changed restore list to use a Dictionary to store all the profile titles, so it is no longer necessary to parse the detected games list
* Changed so ArchiveManager makes a copy of any existing archives, then works on the originals. If canceled, the original will be deleted and replaced with the copy.

=v.0.2 - Second Alpha=
* Changed detected game list to be a tree for MOD sorting
* Added support for MODs that depend on detected games
* Changed the character for seperating game and username to _
* Added a progress bar to the detecting games splash
* Added similar progress bar to backend
* Added the hastilyest produced logo in history
* Fixed a problem where MASGAU could hang while querying task settings
* Fixed a problem where two threads tried to make the splash appear
* Changed SettingsManager so undetected games are not kept in memory (redetection now re-creates SettingsManager object)
* Changed Documents folder detection to use GetFolderPath (takes care of a localization problem)
* Added ability to specify a registry key to supply a root path
* Added new tag for game configs to specify an identifying folder or file
* Added ability to specify a start menu shortcut that points to the root
* Added indentifiers to games that might get confused
* Fixed a problem were an incomplete archive could crash the program
* Added an icon! Woo!
* Fixed a problem when checking the registry key that tells MASGAU if UAC is enabled

=v.0.1 - Initial Release=